https://practice.geeksforgeeks.org/problems/trapping-rain-water/0

#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define PI 3.14159
#define fo(i,k) for(i=0;i<k;i++)
#define fok(i,k,n) for(i=k;i<n;i++)

const int size=10000005;
int a[size];
int pre[size];
int post[size];

void solve(){
    int n;
    cin>>n;
    
    int i;
    fo(i,n) cin>>a[i];
    
    int cur=INT_MIN;
    fo(i,n){
        pre[i]=cur=max(cur,a[i]);
    }
    
    cur=INT_MIN;
    for(i=n-1;~i;i--){
        post[i]=cur=max(cur,a[i]);
    }
    
    int ans=0;
    
    fo(i,n){
        cur=min(pre[i],post[i]);
        cur-=a[i];
        if(cur>0)
        ans+= cur;
    }
    cout<<ans;
}

void solveSpaceOptimised(){
    int n;
    cin>>n;
    
    int i;
    fo(i,n) cin>>a[i];
    
    int ans=0;
    int l=0,h=n-1;
    int left_max=-1,right_max=-1;//till now
    
    //insted of pre and post array ,we are using just 2 variables
    
    while(l<=h){
        if(a[l]<a[h]){
            if(a[l]>left_max)
                left_max=a[l];
            else
                ans+= left_max-a[l];
            l++;
        }else{
            if(a[h]>right_max)
                right_max=a[h];
            else
                ans+= right_max-a[h];
            
            h--;
        }
    }
    
    cout<<ans;
}




int main() {
	int t=1;
	cin>>t;
	while(t--){
	    solveSpaceOptimised(); cout<<endl;
	    //cout<<solve()<<endl;
	}
	return 0;
}
